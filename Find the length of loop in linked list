/*

class Node
{
    int data;
    Node next;
    Node(int d) {data = d; next = null; }
}

*/

//Function should return the length of the loop in LL.

class Solution
{
    //Function to find the length of a loop in the linked list.
    static int countNodesinLoop(Node head)
    {
        //Add your code here.
       /* HashMap<Node , Integer>map = new HashMap<>();
        Node temp = head;
        int ct=1;
        while(temp != null) {
            if(map.containsKey(temp)) {
                return (ct - map.get(temp));
            }
            else {
                map.put(temp,ct);
                ct++;
            }
            temp = temp.next;
        }
        return 0;  */
        
        Node slow = head;
        Node fast = head;
        
        while(fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if(slow == fast) {
                return findLength(slow,fast);
            }
        }
        return 0;
    }
